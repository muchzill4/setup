-- Ident and line wrapping
vim.o.expandtab = true
local indent = 2
vim.o.shiftwidth = indent
vim.o.tabstop = indent
vim.o.breakindent = true
vim.o.linebreak = true
vim.o.showbreak = "â†ª "

-- Clipboard
vim.o.clipboard = "unnamed"

-- Search and replace
vim.o.hlsearch = false
vim.o.ignorecase = true
vim.o.smartcase = true
vim.o.inccommand = "split"

-- Mouse only in visual and normal
vim.o.mouse = "nv"

-- Keep N lines above and below cursor
vim.o.scrolloff = 4

-- Split below and to the right
vim.o.splitbelow = true
vim.o.splitright = true

-- Read tags generated by git hook
vim.o.tags = vim.o.tags .. ",.git/tags"

-- Faster CursorHold
vim.o.updatetime = 100

-- Record undo stack
vim.o.undofile = true

-- Hint when line is too long
vim.o.textwidth = 100
vim.o.colorcolumn = "+1"

-- Highlight current line
vim.wo.cursorline = true

-- Hybrid line numbers
vim.wo.number = true
vim.wo.relativenumber = true

-- Always display sign column, so that it doesn't jump
vim.wo.signcolumn = "yes"

-- Folds
vim.o.foldexpr = "v:lua.vim.treesitter.foldexpr()"
vim.wo.foldmethod = "expr"
vim.wo.foldenable = false -- `zi` to toggle

-- Completion (TODO: can't remember what this does exactly)
vim.o.completeopt = "menu,menuone,noselect"

-- Wildmenu (TODO: can't remember what this does exactly)
vim.o.wildmode = "longest:full,full"

-- Allow project specific config
vim.o.exrc = true

-- Highlight on yank
vim.api.nvim_create_autocmd("TextYankPost", {
  group = vim.api.nvim_create_augroup("HighlightOnYank", {}),
  pattern = "*",
  callback = function() vim.highlight.on_yank() end,
})

-- Scale splits when resizing terminal
vim.api.nvim_create_autocmd("VimResized", {
  group = vim.api.nvim_create_augroup("ResizeSplitsOnWinResize", {}),
  pattern = "*",
  command = "wincmd =",
})
